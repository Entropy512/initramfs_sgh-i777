#!/sbin/busybox sh
# custom script helper by Gokhan Moral

DEFAULT_PROFILE=/res/customconfig/default.profile
CONFIG_XML=/res/customconfig/customconfig.xml
PROFILE_PATH=/data/.uci
TEMP_CONFIG=$PROFILE_PATH/.config.tmp
LAST_SELECTED=.active.profile
ACTIVE_PROFILE=${PROFILE_PATH}/${LAST_SELECTED}

read_dom () {
    local IFS=\>
    read -r ENTITY CONTENT
}

apply_config()
{
while read_dom; do
action=$(echo $ENTITY |  grep -v \<button | sed -e 's/action=/\naction=/g' |grep action|awk -F'"' '{print $2}')
if [ "a$action" != a ];then
  actionval=`/res/uci.sh $action`
  echo applying: /res/uci.sh $action $actionval
  eval /res/uci.sh $action $actionval
fi
done < $CONFIG_XML
}

print_config()
{
  cat $CONFIG_XML
}

list_profile()
{
  ls -1 $PROFILE_PATH | grep \.profile | sed -e 's/.profile//g'
}

select_profile()
{
  if [ "a$1" == "a" ];
  then
    cat $ACTIVE_PROFILE
  else
    # if there is no such profile, create one
    _ACTIVE_PROFILE=`cat $ACTIVE_PROFILE`
    if [ ! -f ${PROFILE_PATH}/$_ACTIVE_PROFILE ];then
      cp $DEFAULT_PROFILE ${PROFILE_PATH}/${1}.profile
    fi
    if [ ! -f ${PROFILE_PATH}/${1}.profile ];then
      cp $_ACTIVE_PROFILE ${PROFILE_PATH}/${1}.profile
    fi
    echo $1 > $ACTIVE_PROFILE
  fi
}

delete_profile()
{
  if [ "`cat $ACTIVE_PROFILE`" == "$1" ];then
    select_profile "default"
  fi
  rm ${PROFILE_PATH}/${1}.profile
}

rename_profile()
{
  # move old profile to new
  mv ${PROFILE_PATH}/${1}.profile ${PROFILE_PATH}/${2}.profile

  # if old profile is active, set the new profile as active profile
  if [ "`cat $ACTIVE_PROFILE`" == "$1" ];then
    echo $2 > $ACTIVE_PROFILE
  fi
}

write_config()
{
  if [ "a$1" == "a" ];then
    _CONFIG_FILE=$PROFILE_PATH/`cat ${PROFILE_PATH}/${LAST_SELECTED}`.profile
  else
    _CONFIG_FILE=$PROFILE_PATH/${1}.profile
  fi

  rm -f $TEMP_CONFIG
  while IFS="=" read -r key value
  do
    evalexpr='eval "echo \$$key"'
    echo $key=`eval $evalexpr`
  done < $DEFAULT_PROFILE > $TEMP_CONFIG
  cp $TEMP_CONFIG $_CONFIG_FILE
  rm -f $TEMP_CONFIG
}

read_config()
{
  if [ "a$1" == "a" ];then
    _CONFIG_FILE=$PROFILE_PATH/`cat ${PROFILE_PATH}/${LAST_SELECTED}`.profile
  else
    _CONFIG_FILE=${1}
  fi


  eval `sed -e 's/[[:space:]]*\=[[:space:]]*/=/g' \
    -e 's/;.*$//' \
    -e 's/[[:space:]]*$//' \
    -e 's/^[[:space:]]*//' \
    -e "s/^\(.*\)=\([^\"']*\)$/\1=\"\2\"/" \
   < $_CONFIG_FILE | grep = `
}

read_defaults ()
{
  read_config "$DEFAULT_PROFILE"
}

# some initialization code

if [ ! -f $PROFILE_PATH/$LAST_SELECTED ];then 
  echo default > $PROFILE_PATH/$LAST_SELECTED
fi

if [ ! -f $PROFILE_PATH/default.profile ];then
  cp $DEFAULT_PROFILE $PROFILE_PATH/default.profile
fi
